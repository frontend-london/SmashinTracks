<?php


/**
 * Skeleton subclass for performing query and update operations on the 'tracks_recommends' table.
 *
 * 
 *
 * This class was autogenerated by Propel 1.4.2 on:
 *
 * 02/03/11 19:41:24
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    lib.model
 */
class TracksRecommendsPeer extends BaseTracksRecommendsPeer {

    public static function getTracksRecommends($criteria = null, $amount = 10, $active = null) {
        if ($criteria === null) {
            $criteria = new Criteria(TracksRecommendsPeer::DATABASE_NAME);
        }
        elseif ($criteria instanceof Criteria)
        {
                $criteria = clone $criteria;
        }
        $criteria->addAscendingOrderByColumn(TracksRecommendsPeer::TRACKS_RECOMMENDS_ORDER);
        if(!is_null($active)) {
            $criteria->add(TracksRecommendsPeer::TRACKS_RECOMMENDS_ACTIVE, $active);
        }
        $criteria->setLimit($amount);
        return self::doSelect($criteria);
    }

    public static function getActiveTracksRecommends($criteria = null, $amount = 10) {
        return self::getTracksRecommends($criteria, $amount, true);
    }

    public static function getInactiveTracksRecommends($criteria = null, $amount = 10) {
        return self::getTracksRecommends($criteria, $amount, false);
    }

    public static function getTracksRecommendsById($tracks_recommends_id, $criteria = null) {
        if ($criteria === null) {
                $criteria = new Criteria();
        }
        elseif ($criteria instanceof Criteria)
        {
                $criteria = clone $criteria;
        }
        $criteria->add(self::TRACKS_RECOMMENDS_ID, $tracks_recommends_id);
        return self::doSelectOne($criteria);
    }
    
} // TracksRecommendsPeer

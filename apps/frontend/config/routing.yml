# You can find more information about this file on the symfony website:
# http://www.symfony-project.org/reference/1_4/en/10-Routing

ajax_forget-password:
  url:     /ajax/forget-password
  param: { module: ajax, action: forgetPassword }

ajax_forget-password_submit:
  url:     /ajax/forget-password/submit
  param: { module: ajax, action: forgetPasswordSubmit }

ajax_track_played:
  url:     /ajax/track-played/:tracks_id
  class:   sfPropelRoute
  options: { model: Tracks, type: object }
  param: { module: ajax, action: trackPlayed }
  requirements:
    sf_method: [get]

artists:
  url:     /artists
  param: { module: artists, action: show, section: artists }

artists_all:
  url:     /artists/all
  param: { module: artists, action: showAll, section: artists }

basket:
  url:     /basket
  param: { module: basket, action: show, section: basket }

basket_add:
  url:     /basket/add/:tracks_id
  class:   sfPropelRoute
  options: { model: Tracks, type: object }
  param: { module: basket, action: add, section: basket }
  requirements:
    sf_method: [get]

basket_remove:
  url:     /basket/remove/:tracks_id
  class:   sfPropelRoute
  options: { model: Tracks, type: object }
  param: { module: basket, action: remove, section: basket }
  requirements:
    sf_method: [get]

basket_paypal_checkout:
  url:     /basket/paypal-checkout/:transactions_id
  class:   sfPropelRoute
  options: { model: Transactions, type: object }
  param: { module: basket, action: payPalCheckout, section: basket }
  requirements:
    sf_method: [get]

change-password:
  url:     /change-password/:profiles_id/:profiles_password_url
  class:   sfPropelRoute
  options: { model: Profiles, type: object }
  param: { module: changePassword, action: show, section: change-password }
  requirements:
    sf_method: [get,post]

charts:
  url:     /charts
  param: { module: charts, action: show, section: charts, subsection: this_week, period: 7 }

charts_3months:
  url:     /charts/last-3-months
  param: { module: charts, action: show, section: charts, subsection: last_3_months, period: 92 }

charts_all:
  url:     /charts/all-time
  param: { module: charts, action: show, section: charts, subsection: all_time, period: null }

contact:
  url:     /contact
  param: { module: contact, action: show, section: contact }

contact_thankyou:
  url:     /contact/thankyou
  param: { module: contact, action: thankyou, section: contact }

faq:
  url:     /faq
  param: { module: faq, action: show, section: faq }

genre:
  url:     /genre/:genres_path
  class:   sfPropelRoute
  options: { model: Genres, type: object }
  param:   { module: genre, action: show, section: home }
  requirements:
    sf_method: [get]

login:
  url:     /login
  param: { module: login, action: show, section: login }

members:
  url:     /members
  param: { module: members, action: show, section: members }

members_checkout:
  url:     /members/checkout
  param: { module: membersCheckout, action: show, section: basket }

members_checkout_complete:
  url:     /members/checkout/complete
  param: { module: membersCheckout, action: complete, section: basket }

members_my-downloads:
  url:     /members/my-downloads
  param: { module: members, action: myDownloads, section: my-downloads }

members_my-profile:
  url:     /members/my-profile
  param: { module: membersMyProfile, action: show, section: my-profile }

members_my-profile_url_edit:
  url:     /members/my-profile/url/edit/:profiles_urls_id
  class:   sfPropelRoute
  options: { model: ProfilesUrls, type: object }
  param: { module: membersMyProfile, action: urlEdit, section: my-profile }
  requirements:
    sf_method: [get]

members_my-profile_url_delete:
  url:     /members/my-profile/url/delete/:profiles_urls_id
  class:   sfPropelRoute
  options: { model: ProfilesUrls, type: object }
  param: { module: membersMyProfile, action: urlDelete, section: my-profile }
  requirements:
    sf_method: [get]

members_my-sales:
  url:     /members/my-sales
  param: { module: members, action: mySales, section: my-sales }

members_my-tracks:
  url:     /members/my-tracks
  param: { module: members, action: myTracks, section: my-tracks, subsection: all_tracks }

members_my-tracks_most_popular:
  url:     /members/my-tracks/most-popular
  param: { module: members, action: myTracks, section: my-tracks, subsection: most_popular }

members_my-tracks_in_wishlists:
  url:     /members/my-tracks/in-wishlists
  param: { module: members, action: myTracks, section: my-tracks, subsection: in_wishlists }

members_my-wishlist:
  url:     /members/my-wishlist
  param: { module: members, action: myWishlist, section: my-wishlist, subsection: last_added }

members_my-wishlist_by_artist:
  url:     /members/my-wishlist/by-artist
  param: { module: members, action: myWishlist, section: my-wishlist, subsection: by_artist }

members_my-wishlist_add:
  url:     /members/my-wishlist/add/:tracks_id
  class:   sfPropelRoute
  options: { model: Tracks, type: object }
  param: { module: members, action: myWishlistAdd, section: my-wishlist }
  requirements:
    sf_method: [get]

members_my-wishlist_remove:
  url:     /members/my-wishlist/remove/:tracks_id
  class:   sfPropelRoute
  options: { model: Tracks, type: object }
  param: { module: members, action: myWishlistRemove, section: my-wishlist, subsection: last_added }
  requirements:
    sf_method: [get]

members_my-wishlist_by_artist_remove:
  url:     /members/my-wishlist/by-artist/remove/:tracks_id
  class:   sfPropelRoute
  options: { model: Tracks, type: object }
  param: { module: members, action: myWishlistRemove, section: my-wishlist, subsection: by_artist }
  requirements:
    sf_method: [get]

members_upload-track:
  url:     /members/upload-track
  param: { module: membersUploadTrack, action: show, section: upload-track }

members_withdraw:
  url:     /members/withdraw
  param: { module: membersWithdraw, action: show, section: withdraw }

members_withdraw_your-paypal:
  url:     /members/withdraw/your-paypal
  param: { module: membersWithdraw, action: yourPaypal, section: withdraw }

new-tracks:
  url:     /new-tracks
  param: { module: charts, action: newTracks, section: charts }

order_registered:
  url:     /order/:transactions_id
  class:   sfPropelRoute
  options: { model: Transactions, type: object }
  param: { module: order, action: show, section: order, registered: true }
  requirements:
    sf_method: [get]

order_unregistered:
  url:     /order/:transactions_id/:transactions_path
  class:   sfPropelRoute
  options: { model: Transactions, type: object }
  param: { module: order, action: show, section: order, registered: false }
  requirements:
    sf_method: [get]

panel_acceptances:
  url:     /panel/acceptances
  param: { module: panelAcceptances, action: show, section: panel-acceptances }

panel_acceptances_accept_track:
  url:     /panel/acceptances/accept/:tracks_id
  class:   sfPropelRoute
  options: { model: Tracks, type: object }
  param: { module: panelAcceptances, action: accept, section: panel-acceptances }
  requirements:
    sf_method: [get]

panel_acceptances_disapprove_track:
  url:     /panel/acceptances/disapprove/:tracks_id
  class:   sfPropelRoute
  options: { model: Tracks, type: object }
  param: { module: panelAcceptances, action: disapprove, section: panel-acceptances }
  requirements:
    sf_method: [get]

panel_artists:
  url:     /panel/artists
  param: { module: panelArtists, action: show, section: panel-artists }

panel_artists_alphabetically:
  url:     /panel/artists/alphabetically
  param: { module: panelArtists, action: showAlphabetically, section: panel-artists }

panel_artists_blocked:
  url:     /panel/artists/blocked
  param: { module: panelArtists, action: showBlocked, section: panel-artists }

panel_artists_blocked_alphabetically:
  url:     /panel/artists/blocked/alphabetically
  param: { module: panelArtists, action: showBlockedAlphabetically, section: panel-artists }

panel_artists_accept_blocked:
  url:     /panel/artists/blocked/accept/:profiles_id
  class:   sfPropelRoute
  options: { model: Profiles, type: object }
  param: { module: panelArtists, action: acceptBlocked, section: panel-artists }
  requirements:
    sf_method: [get]

panel_artists_accept_blocked_alphabetically:
  url:     /panel/artists/blocked/alphabetically/accept/:profiles_id
  class:   sfPropelRoute
  options: { model: Profiles, type: object }
  param: { module: panelArtists, action: acceptBlockedAlphabetically, section: panel-artists }
  requirements:
    sf_method: [get]

panel_artists_delete_blocked:
  url:     /panel/artists/blocked/delete/:profiles_id
  class:   sfPropelRoute
  options: { model: Profiles, type: object }
  param: { module: panelArtists, action: deleteBlocked, section: panel-artists }
  requirements:
    sf_method: [get]

panel_artists_delete_blocked_alphabetically:
  url:     /panel/artists/blocked/alphabetically/delete/:profiles_id
  class:   sfPropelRoute
  options: { model: Profiles, type: object }
  param: { module: panelArtists, action: deleteBlockedAlphabetically, section: panel-artists }
  requirements:
    sf_method: [get]

panel_delete_track:
  url:     /panel/delete-track/:tracks_id
  class:   sfPropelRoute
  options: { model: Tracks, type: object }
  param: { module: panelHome, action: deleteTrack, section: panel-home }
  requirements:
    sf_method: [get]

panel_edit-artist:
  url:     /panel/edit-artist/:profiles_id
  class:   sfPropelRoute
  options: { model: Profiles, type: object }
  param: { module: panelEditArtist, action: show, section: panel-edit-artist }
  requirements:
    sf_method: [get, post]

panel_genres:
  url:     /panel/genres
  param: { module: panelGenres, action: show, section: panel-genres }

panel_genres_delete:
  url:     /panel/genres/delete/:genres_id
  class:   sfPropelRoute
  options: { model: Genres, type: object }
  param: { module: panelGenres, action: delete, section: panel-genres }
  requirements:
    sf_method: [get]

panel_genres_edit:
  url:     /panel/genres/edit/:genres_id
  class:   sfPropelRoute
  options: { model: Genres, type: object }
  param: { module: panelGenres, action: edit, section: panel-genres }
  requirements:
    sf_method: [get, post]

panel_home:
  url:     /panel/home
  param: { module: panelHome, action: show, section: panel-home }

panel_home_accept_track:
  url:     /panel/home/accept/:tracks_id
  class:   sfPropelRoute
  options: { model: Tracks, type: object }
  param: { module: panelHome, action: accept, section: panel-home }
  requirements:
    sf_method: [get]

panel_home_disapprove_track:
  url:     /panel/home/disapprove/:tracks_id
  class:   sfPropelRoute
  options: { model: Tracks, type: object }
  param: { module: panelHome, action: disapprove, section: panel-home }
  requirements:
    sf_method: [get]

panel_new-label-settings:
  url:     /panel/new-label-settings
  param: { module: panelNewLabelSettings, action: show, section: panel-new-label-settings }

panel_recommends:
  url:     /panel/recommends
  param: { module: panelRecommends, action: show, section: panel-recommends }

panel_recommends_add:
  url:     /panel/recommends/add/:tracks_id
  class:   sfPropelRoute
  options: { model: Tracks, type: object }
  param: { module: panelRecommends, action: add, section: panel-recommends }
  requirements:
    sf_method: [get]

panel_recommends_delete:
  url:     /panel/recommends/delete/:tracks_recommends_id
  class:   sfPropelRoute
  options: { model: TracksRecommends, type: object }
  param: { module: panelRecommends, action: delete, section: panel-recommends }
  requirements:
    sf_method: [get]

panel_recommends_order:
  url:     /panel/recommends/order/:tracks_recommends_id/:second_tracks_recommends_id
  class:   sfPropelRoute
  options: { model: TracksRecommends, type: object }
  param: { module: panelRecommends, action: changeOrder, section: panel-recommends }
  requirements:
    sf_method: [get]
    second_tracks_recommends_id: \d+

panel_transactions-history:
  url:     /panel/transactions-history
  param: { module: panelTransactionsHistory, action: show, section: panel-transactions-history }

profile:
  url:     /profile/:profiles_path
  class:   sfPropelRoute
  options: { model: Profiles, type: object }
  param:   { module: profile, action: show, section: artists }
  requirements:
    sf_method: [get]

register:
  url:     /register
  param: { module: register, action: show, section: register }

register_welcome:
  url:     /register/welcome
  param: { module: register, action: welcome, section: register }

search:
  url:     /search
  param: { module: search, action: show, section: search }

sign-out:
  url:     /sign-out
  param: { module: metadata, action: signOut, section: home }

terms:
  url:     /terms-and-conditions
  param: { module: terms, action: show, section: terms }

track:
  url:     /track/:tracks_path
  class:   sfPropelRoute
  options: { model: Tracks, type: object }
  param:   { module: track, action: show, section: charts }
  requirements:
    sf_method: [get]

# default rules
homepage:
  url:   /
  param: { module: home, action: show, section: home, facebook: true }

# generic rules
# please, remove them by adding more specific rules
#default_index:
#  url:   /:module
#  param: { action: index }

#default:
#  url:   /:module/:action/*
